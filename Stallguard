; ===== tuneStall_X.g – sensorless homing calibration =====
; Press X carriage against X-min hard stop before starting!

; user parameters
var testDist = 120      ; mm to push into stop
var retract  = 100       ; mm out before each test
var feed     = 6000    ; mm/min test speed
var Smin     = 1
var Smax     = 8
var runPct   = 30      ; % of normal hold current

M291 S3 R"Sensorless Tune – X" P"Make sure carriage is at X-min then click OK."

; save & reduce current
var orig = move.axes[0].current
M906 X{var.orig * var.runPct / 100}

var best = -1
var S    = var.Smin

while var.S <= var.Smax
  ; set this trial’s threshold
  M915 X S{var.S} H400 R0 F0

  ; retract off the stop
  G91
  G1 X{var.retract} F2400
  M400

  ; disable software limits so we can bump into the mechanical endstop
  M564 S0
  G90

  ; drive back into the stop
  G1 H1 X{-var.testDist} F{var.feed}
  M400

  ; re-enable software limits
  M564 S1

  ; if StallGuard flagged a “homed” event, we’ve found our S
  if move.axes[0].homed
    set var.best = var.S
    break

  ; otherwise reposition for next pass
  G90
  G1 X{var.retract + var.testDist} F6000

  ; try next threshold
  set var.S = var.S + 1

; — end of while (no “endwhile”)

; restore original current and absolute mode
G90
M906 X{var.orig}

; report outcome
if var.best >= 0
  M291 S1 R"Done" P{"Best threshold = " ^ var.best}
  echo ">>>  Use: M915 X S", var.best, " H400 R0 F0"
else
  M291 S2 R"Failed" P{"No threshold found (" ^ var.Smin ^ "-" ^ var.Smax ^ ")"}

; — end of macro
